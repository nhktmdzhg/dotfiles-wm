#################################
#           Animations         #

# !These animations WILL NOT work correctly for any other wm other than phyOS-dwm fork!

# fly-in: Windows fly in from random directions to the screen
# maximize: Windows pop from center of the screen to their respective positions
# minimize: Windows minimize from their position to the center of the screen
# slide-in-center: Windows move from upper-center of the screen to their respective positions
# slide-out-center: Windows move to the upper-center of the screen
# slide-left: Windows are created from the right-most window position and slide leftwards
# slide right: Windows are created from the left-most window position and slide rightwards
# slide-down: Windows are moved from the top of the screen and slide downward
# slide-up: Windows are moved from their position to top of the screen
# squeeze: Windows are either closed or created to/from their center y-position (the animation is similar to a blinking eye)
# squeeze-bottom: Similar to squeeze, but the animation starts from bottom-most y-position
# zoom: Windows are either created or destroyed from/to their center (not the screen center)

#################################

#enable or disable animations
animations = true;
#change animation speed of windows in current tag e.g open window in current tag
animation-stiffness-in-tag = 250;
#change animation speed of windows when tag changes
animation-stiffness-tag-change = 90.0;

animation-window-mass = 0.4;
animation-dampening = 15;
animation-clamping = true;

#open windows
animation-for-open-window = "fly-in";
#minimize or close windows
animation-for-unmap-window = "minimize";
#popup windows
animation-for-transient-window = "zoom"; #available options: slide-up, slide-down, slide-left, slide-right, squeeze, squeeze-bottom, zoom

#set animation for windows being transitioned out while changings tags
animation-for-prev-tag = "minimize";
#enables fading for windows being transitioned out while changings tags
enable-fading-prev-tag = true;

#set animation for windows being transitioned in while changings tags
animation-for-next-tag = "slide-in-center";
#enables fading for windows being transitioned in while changings tags
enable-fading-next-tag = true;

#################################
#             Shadows           #
#################################

# Enabled client-side shadows on windows. Note desktop windows
# (windows with '_NET_WM_WINDOW_TYPE_DESKTOP') never get shadow,
# unless explicitly requested using the wintypes option.
#
# shadow = false
shadow = false;

# The blur radius for shadows, in pixels. (defaults to 12)
# shadow-radius = 12
shadow-radius = 0;

# The opacity of shadows. (0.0 - 1.0, defaults to 0.75)
# shadow-opacity = .75

# The left offset for shadows, in pixels. (defaults to -15)
# shadow-offset-x = -15
shadow-offset-x = 0;

# The top offset for shadows, in pixels. (defaults to -15)
# shadow-offset-y = -15
shadow-offset-y = 0;

# Red color value of shadow (0.0 - 1.0, defaults to 0).
# shadow-red = 0

# Green color value of shadow (0.0 - 1.0, defaults to 0).
# shadow-green = 0

# Blue color value of shadow (0.0 - 1.0, defaults to 0).
# shadow-blue = 0

# Hex string color value of shadow (#000000 - #FFFFFF, defaults to #000000). This option will override options set shadow-(red/green/blue)
# shadow-color = "#000000"

# Specify a list of conditions of windows that should have no shadow.
#
# examples:
#   shadow-exclude = "n:e:Notification";
#
# shadow-exclude = []
shadow-exclude = [
  "name = 'Notification'",
  "_GTK_FRAME_EXTENTS@:c",
  "window_type = 'menu'",
  "window_type = 'popup_menu'",
  "window_type = 'dropdown_menu'",
  "class_g = 'dunst'",
];

# Specify a list of conditions of windows that should have no shadow painted over, such as a dock window.
# clip-shadow-above = []

# Specify a X geometry that describes the region in which shadow should not
# be painted in, such as a dock window region. Use
#    shadow-exclude-reg = "x10+0+0"
# for example, if the 10 pixels on the bottom of the screen should not have shadows painted on.
#
# shadow-exclude-reg = ""

# Crop shadow of a window fully on a particular monitor to that monitor. This is
# currently implemented using the X RandR extension.
# crop-shadow-to-monitor = false

# FADING
# ---
# Fade windows in/out when opening/closing and when opacity changes.
fading = true;
# Opacity change between steps while fading in.
fade-in-step = 0.025;
# Opacity change between steps while fading out.
fade-out-step = 0.025;
# The time between steps in fade step, in milliseconds.
fade-delta = 4;
# Do not fade destroyed ARGB windows with WM frame.
# Workaround of bugs in Openbox, Fluxbox, etc.
no-fading-destroyed-argb = true;

# OPACITY
# ---
# Let inactive opacity set by -i override the '_NET_WM_WINDOW_OPACITY' values of windows.
inactive-opacity-override = false;

# GENERAL
# ---
# Specify the backend to use: `xrender`, `glx`, or `xr_glx_hybrid`.
backend = "glx";
# Enable or disable VSync.
vsync = true;
# Try to detect WM windows and mark them as active.
mark-wmwin-focused = true;
# Mark override-redirect windows that doesn't have a child window with 'WM_STATE' focused.
mark-ovredir-focused = true;
# Try to detect windows with rounded corners and don't consider them shaped windows.
detect-rounded-corners = true;
# Detect '_NET_WM_WINDOW_OPACITY' on client windows,
# useful for window managers not passing '_NET_WM_WINDOW_OPACITY' of client windows to frame windows.
detect-client-opacity = true;
# Use EWMH '_NET_ACTIVE_WINDOW' to determine currently focused window,
# rather than listening to 'FocusIn'/'FocusOut' event.
# Might have more accuracy, provided that the WM supports it.
use-ewmh-active-win = true;
# Unredirect all windows if a full-screen opaque window is detected,
# to maximize performance for full-screen windows.
# Known to cause flickering when redirecting/unredirecting windows.
unredir-if-possible = false;
# Use 'WM_TRANSIENT_FOR' to group windows,
# and consider windows in the same group focused at the same time.
detect-transient = true;
# Use 'WM_CLIENT_LEADER' to group windows, and consider windows in the same group focused at the same time.
# This usually means windows from the same application will be considered focused or unfocused at the same time.
# 'WM_TRANSIENT_FOR' has higher priority if detect-transient is enabled, too.
detect-client-leader = true;
# GLX backend: Avoid using stencil buffer, useful if you don't have a stencil buffer.
# Might cause incorrect opacity when rendering transparent content and may not work with blur-background.
# My tests show a 15% performance boost. Recommended.
glx-no-stencil = true;
# GLX backend: Avoid rebinding pixmap on window damage.
# Probably could improve performance on rapid window content changes,
# but is known to break things on some drivers (LLVMpipe, xf86-video-intel, etc.).
# Recommended if it works.
glx-no-rebind-pixmap = true;
# Use X Sync fence to sync clients' draw calls,
# to make sure all draw calls are finished before picom starts drawing.
# Needed on nvidia-drivers with GLX backend for some users.
xrender-sync-fence = true;
# Set the log level.
# Possible values are: "trace", "debug", "info", "warn", "error" in increasing level of importance.
# Case doesn't matter. If using the "TRACE" log level, it's better to log into a file using *--log-file*,
# since it can generate a huge stream of logs.
log-level = "warn";
# Set the log file.
# If *--log-file* is never specified, logs will be written to stderr.
# Otherwise, logs will to written to the given file,
# though some of the early logs might still be written to the stderr.
# When setting this option from the config file, it is recommended to use an absolute path.
log-file = "/dev/null"

